{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/douglasdantas/Documents/Pessoais/NLW/moveit-next/src/contexts/ChallengeContext.tsx\";\nimport { createContext, useState } from \"react\";\nimport challenges from '../../challenges.json';\nexport const challengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n  }\n\n  return /*#__PURE__*/_jsxDEV(challengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/douglasdantas/Documents/Pessoais/NLW/moveit-next/src/contexts/ChallengeContext.tsx"],"names":["createContext","useState","challenges","challengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAcA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASW,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASO,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,UAAU,CAACgB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGjB,UAAU,CAACY,oBAAD,CAA5B;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAC/BR,MAAAA,KAD+B;AAE/BE,MAAAA,iBAF+B;AAG/BE,MAAAA,mBAH+B;AAI/BE,MAAAA,OAJ+B;AAK/BC,MAAAA;AAL+B,KAAnC;AAAA,cAOKR;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport challenges from '../../challenges.json'\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const challengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n    function levelUp() {\n        setLevel(level + 1);\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex];\n    }\n\n    return (\n        <challengesContext.Provider value={{\n            level,\n            currentExperience,\n            challengesCompleted,\n            levelUp,\n            startNewChallenge,\n        }}>\n            {children}\n        </challengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}